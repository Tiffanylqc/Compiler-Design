func fb<int n> -> int
{
	if (n < 0)
	{
		print "error!";_n_.
		return 0.
	}
	if (n == 0) { return 0. }
	if (n == 1) { return 1. }
	return fb(n - 1) + fb(n - 2).
}

func pc <char c> -> void
{
	print [c|int];.
	if ([c|bool]) 
	{
		call pc([[c|int]+ 1|char]).
	}
	return.
}

func dfs <[[int]] map, int i, int j> -> void
{
	if (i < 0 || i >= length map) { return. }
	if (j < 0 || j >= length map[i]) { return. }
	if (map[i][j] == 1) { return. }
	if (i == length map - 1 && j == length map[i] - 1) 
	{ print "<", i, ",", j, ">";. }
	map[i][j] := 1.
	call dfs(map, i + 1, j).
	call dfs(map, i - 1, j).
	call dfs(map, i, j - 1).
	call dfs(map, i, j + 1).
	map[i][j] := 0.
	return.
}

exec
{
	print fb(8);fb(9);fb(10);_n_.
	call fb(13).
	call pc(^^^). print _n_.
	var map:=[[0,0,0,0],[0,0,0,0],[0,0,0,0]].
	call dfs(map, 0, 0).
	print _n_,map.
	print _n_;fb(-2);_n_.
}